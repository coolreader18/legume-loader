(()=>{function t(t,e){var r;try{r=new URL(t)}catch(e){"Failed to construct 'URL': Invalid URL"==e.message&&(r=new URL(t,location.href))}return fetch(r).then(t=>{if(t.ok)return t;throw new Error(e)}).catch(alert)}var e={version:"v3.0.0",scripts:{},dir:{scripts:{update(){e.json(scriptdirurl).then(t=>(delete this.unloaded,Object.assign(this,t)))},get(t){var e=this[t];return e.url.replace(/%VERSION/,e.latest)},unloaded:!0},styles:{update(){e.json(styledirurl).then(t=>(delete this.unloaded,Object.assign(this,t)))},get(t){var e=this[t];return e.url.replace(/%VERSION/,e.latest)},unloaded:!0}},load(t,r){const s=t=>(t=t.trim()).startsWith("github:")?e.github(t.replace(/github:/,"")):t.startsWith("json:")?e.json(t.replace(/json:/,"")):t.startsWith("text:")?e.text(t.replace(/text:/,"")):e.script(t);if("string"==typeof r){if("github"==r)return e.github(t);if("script"==r)return e.script(t);if("json"==r)return e.json(t);if("text"==r)return e.text(t);if("txtscript"==r)return e.process(t)}"string"==typeof t?s(t):(Array.isArray(t),t.forEach(s))},async process(t,r){var s,a,i,n,l,c,o,d,p,u=(s=r,a=!1,i={cmt:/^(\s*\/\/\s*)/,multi:{start:/^(\s*\/\*\s*@legume\s*)/i,end:/^\s*\*\//},single:{start:/\s*@legume\s*/,match:/\s*@[^@]*/g}},n={name:"",version:"",description:"",repository:"",author:[],email:"",url:"",license:"",script:[],style:[],var:[],async:!1},l={},c=[],o=[],d=!1,p=(t=>{var e=t.trim().match(/@([^\s]+)(?:\s+(.*))?$/);if(e){var r=e[1],s=e[2];if(void 0!==r)if(Array.isArray(n[r]))l[r]=l[r]||[],l[r].push(s);else if("boolean"==typeof n[r])try{l[r]=JSON.parse(s)}catch(t){l[r]=!0}else l[r]=s;else console.warn(`ignoring invalid metadata option: \`${r}\``)}}),t.match(/[^\r\n]+/g).forEach((t,e,r)=>{if(i.cmt.test(t)){var s=t.replace(i.cmt,"").trim();if(i.single.start.test(s)){s.replace(i.single.start,"");for(var n=i.single.match.exec(s);n;n=i.single.match.exec(s))p(n[0])}}else i.multi.end.test(t)&&a?a=!1:a?p(t):i.multi.start.test(t)?(a=!0,d=!0):c.push(t);a&&e+1==r.length&&o.push("missing metdata block closing")}),{metadata:Object.assign(l,s),code:c.join("\n"),errors:o.length?o:null,legumescript:d}),h=u.metadata,m=u.code,g=(async()=>{if(h.script){let r=h.script;for(var t=0;t<r.length;t++)await e.script(r[t])}else;})();h.style&&h.style.forEach(e.style),["var","async"].forEach(t=>{u[t]=u.metadata[t],delete u.metadata[t]}),Object.assign(u.metadata,r),u.var=u.var||[],u.var=u.var.reduce((t,e)=>{var r=e.split(" ");return t[r[0]]=r[1]||r[0],t},{});var y={exports:{}},f=y.exports,v={module:y,exports:f};if(await g,u.legumescript&&u.metadata.name){let t=e.scripts[h.name]=e.scripts[h.name]||u;t.clicks=t.clicks+1||0,await new(u.async?Object.getProtoypeOf(async()=>{}).constructor:Function)(...Object.values(u.var),m).apply(t,Object.keys(u.var).map(t=>v[t]))}else eval.call(null,m);return Object.getOwnPropertyNames(y.exports).length||Object.getOwnPropertySymbols(y.exports).length?y.exports:void 0},script(r){const s=r=>t(r,"Couldn't load the script.").then(t=>t.text()).then(e.process);return r.startsWith("dir:")?(r=r.replace(/dir:/,"").trim(),(async()=>e.dir.scripts.unloaded?await e.dir.scripts.update():e.dir.scripts)().then(t=>s(t.get(r)))):s(r)},style(t){const r=t=>{l.href=t,document.head.append(l)};return l=document.createElement("link"),l.rel="stylesheet",t.startsWith("dir:")?(t=t.replace(/dir:/,"").trim(),(async()=>e.dir.styles.unloaded?await e.dir.styles.update():e.dir.styles)().then(e=>r(e.get(t)))):r(t)},github(e){var r=e.split("/"),s=r.slice(0,2).join("/");return fetch(`https://api.github.com/repos/${s}/releases/latest`).then(t=>{if(t.ok)return t.json().then(t=>`https://cdn.rawgit.com/${s}/${t.tag_name}/${r.slice(2).join("/")}`);throw new Error("Couldn't connect to GitHub")}).then(t).catch(alert)},json:e=>t(e,"Couldn't load JSON.").then(t=>t.json()),text:e=>t(e,"Couldn't load text.").then(t=>t.text())};window.Legume=e})();
